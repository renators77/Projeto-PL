
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/rightsimetricoCOMENTARIO EM ESCREVER FAZER FIM ID NUM PARA STRING VAR S : LstV ';'  S : FIM ';'  LstV : LstV ';' Instrucao  LstV : Instrucao  Instrucao : ESCREVER Resultado \n                      | VAR ListaSimbolos  Instrucao : Identificador  Instrucao : COMENTARIO  Instrucao : PARA ID EM '[' MATH '.' '.' MATH ']' FAZER Resultado FIM PARA  Instrucao : ESCREVER Resultado COMENTARIO\n                      | VAR ListaSimbolos COMENTARIO  ListaSimbolos : ListaIDs  ListaSimbolos : ListaIDs ',' ListaSimbolos  ListaIDs : ID  ListaIDs : ID '=' MATH  Identificador : ID '=' MATH  Resultado : ListaResultados  Resultado : ListaResultados ',' Resultado  ListaResultados : MATH  MATH : MATH '+' MATH\n                 | MATH '-' MATH\n                 | MATH '*' MATH\n                 | MATH '/' MATH  MATH : '-' MATH   %prec simetrico  MATH : '(' MATH ')'  MATH : NUM  MATH : ID  MATH : STRING "
    
_lr_action_items = {'FIM':([0,14,15,18,19,20,33,40,41,42,43,44,45,55,],[3,-17,-19,-26,-27,-28,-24,-18,-20,-21,-22,-23,-25,56,]),'ESCREVER':([0,11,],[5,5,]),'VAR':([0,11,],[6,6,]),'COMENTARIO':([0,11,13,14,15,18,19,20,21,22,23,33,40,41,42,43,44,45,46,47,],[8,8,27,-17,-19,-26,-27,-28,35,-12,-14,-24,-18,-20,-21,-22,-23,-25,-13,-15,]),'PARA':([0,11,56,],[9,9,57,]),'ID':([0,5,6,9,11,16,17,25,28,29,30,31,32,36,37,48,51,54,],[10,19,23,24,10,19,19,19,19,19,19,19,19,23,19,19,19,19,]),'$end':([1,11,12,],[0,-1,-2,]),';':([2,3,4,7,8,13,14,15,18,19,20,21,22,23,26,27,33,35,39,40,41,42,43,44,45,46,47,57,],[11,12,-4,-7,-8,-5,-17,-19,-26,-27,-28,-6,-12,-14,-3,-10,-24,-11,-16,-18,-20,-21,-22,-23,-25,-13,-15,-9,]),'-':([5,15,16,17,18,19,20,25,28,29,30,31,32,33,34,37,39,41,42,43,44,45,47,48,49,51,52,54,],[16,30,16,16,-26,-27,-28,16,16,16,16,16,16,-24,30,16,30,-20,-21,-22,-23,-25,30,16,30,16,30,16,]),'(':([5,16,17,25,28,29,30,31,32,37,48,51,54,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'NUM':([5,16,17,25,28,29,30,31,32,37,48,51,54,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'STRING':([5,16,17,25,28,29,30,31,32,37,48,51,54,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'=':([10,23,],[25,37,]),',':([14,15,18,19,20,22,23,33,41,42,43,44,45,47,],[28,-19,-26,-27,-28,36,-14,-24,-20,-21,-22,-23,-25,-15,]),'+':([15,18,19,20,33,34,39,41,42,43,44,45,47,49,52,],[29,-26,-27,-28,-24,29,29,-20,-21,-22,-23,-25,29,29,29,]),'*':([15,18,19,20,33,34,39,41,42,43,44,45,47,49,52,],[31,-26,-27,-28,-24,31,31,31,31,-22,-23,-25,31,31,31,]),'/':([15,18,19,20,33,34,39,41,42,43,44,45,47,49,52,],[32,-26,-27,-28,-24,32,32,32,32,-22,-23,-25,32,32,32,]),')':([18,19,20,33,34,41,42,43,44,45,],[-26,-27,-28,-24,45,-20,-21,-22,-23,-25,]),'.':([18,19,20,33,41,42,43,44,45,49,50,],[-26,-27,-28,-24,-20,-21,-22,-23,-25,50,51,]),']':([18,19,20,33,41,42,43,44,45,52,],[-26,-27,-28,-24,-20,-21,-22,-23,-25,53,]),'EM':([24,],[38,]),'[':([38,],[48,]),'FAZER':([53,],[54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'LstV':([0,],[2,]),'Instrucao':([0,11,],[4,26,]),'Identificador':([0,11,],[7,7,]),'Resultado':([5,28,54,],[13,40,55,]),'ListaResultados':([5,28,54,],[14,14,14,]),'MATH':([5,16,17,25,28,29,30,31,32,37,48,51,54,],[15,33,34,39,15,41,42,43,44,47,49,52,15,]),'ListaSimbolos':([6,36,],[21,46,]),'ListaIDs':([6,36,],[22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> LstV ;','S',2,'p_s','arith_grammar.py',42),
  ('S -> FIM ;','S',2,'p_fim','arith_grammar.py',49),
  ('LstV -> LstV ; Instrucao','LstV',3,'p_expr_tail','arith_grammar.py',55),
  ('LstV -> Instrucao','LstV',1,'p_expr_head','arith_grammar.py',64),
  ('Instrucao -> ESCREVER Resultado','Instrucao',2,'p_expr_inst_operacao','arith_grammar.py',71),
  ('Instrucao -> VAR ListaSimbolos','Instrucao',2,'p_expr_inst_operacao','arith_grammar.py',72),
  ('Instrucao -> Identificador','Instrucao',1,'p_expr_inst_operacao_identificador','arith_grammar.py',79),
  ('Instrucao -> COMENTARIO','Instrucao',1,'p_expr_inst_operacao_comentario','arith_grammar.py',86),
  ('Instrucao -> PARA ID EM [ MATH . . MATH ] FAZER Resultado FIM PARA','Instrucao',13,'p_expr_inst_operacao_ciclo','arith_grammar.py',93),
  ('Instrucao -> ESCREVER Resultado COMENTARIO','Instrucao',3,'p_expr_inst_operacao_ESCVAR_comentario','arith_grammar.py',100),
  ('Instrucao -> VAR ListaSimbolos COMENTARIO','Instrucao',3,'p_expr_inst_operacao_ESCVAR_comentario','arith_grammar.py',101),
  ('ListaSimbolos -> ListaIDs','ListaSimbolos',1,'p_expr_atribuicao_simbolo_id','arith_grammar.py',108),
  ('ListaSimbolos -> ListaIDs , ListaSimbolos','ListaSimbolos',3,'p_expr_multiplo_simbolo','arith_grammar.py',115),
  ('ListaIDs -> ID','ListaIDs',1,'p_expr_id','arith_grammar.py',122),
  ('ListaIDs -> ID = MATH','ListaIDs',3,'p_expr_atribuicao_id','arith_grammar.py',131),
  ('Identificador -> ID = MATH','Identificador',3,'p_expr_atribuicao_identificador','arith_grammar.py',138),
  ('Resultado -> ListaResultados','Resultado',1,'p_expr_listaResultados','arith_grammar.py',150),
  ('Resultado -> ListaResultados , Resultado','Resultado',3,'p_args_multiplo_resultado','arith_grammar.py',156),
  ('ListaResultados -> MATH','ListaResultados',1,'p_args_resultado','arith_grammar.py',163),
  ('MATH -> MATH + MATH','MATH',3,'p_expr_operacao_math','arith_grammar.py',170),
  ('MATH -> MATH - MATH','MATH',3,'p_expr_operacao_math','arith_grammar.py',171),
  ('MATH -> MATH * MATH','MATH',3,'p_expr_operacao_math','arith_grammar.py',172),
  ('MATH -> MATH / MATH','MATH',3,'p_expr_operacao_math','arith_grammar.py',173),
  ('MATH -> - MATH','MATH',2,'p_expr_sinalmenos','arith_grammar.py',180),
  ('MATH -> ( MATH )','MATH',3,'p_expr_parenteses','arith_grammar.py',186),
  ('MATH -> NUM','MATH',1,'p_expr_numero','arith_grammar.py',193),
  ('MATH -> ID','MATH',1,'p_expr_var','arith_grammar.py',200),
  ('MATH -> STRING','MATH',1,'p_expr_string','arith_grammar.py',207),
]
